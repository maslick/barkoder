plugins {
    id "idea"
    id "java"

    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
    id 'org.jetbrains.kotlin.plugin.allopen' version '1.3.21'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.3.21'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.21'
    id 'org.jetbrains.kotlin.plugin.noarg' version '1.3.21'

    id "org.springframework.boot" version "2.1.3.RELEASE"
    id "io.spring.dependency-management" version "1.0.7.RELEASE"

    id "jacoco"
    id "org.sonarqube" version "2.7"

    id "nebula.javadoc-jar" version "9.5.0"
    id "nebula.source-jar" version "9.5.0"
    id "nebula.maven-publish" version "9.5.0"

    id "com.jfrog.bintray" version "1.8.4"
    id "com.jfrog.artifactory" version "4.9.5"

    id "com.bmuschko.docker-remote-api" version "4.6.2"
}

group = 'io.maslick'
version = '0.4' + (Boolean.valueOf(System.getProperty("snapshot")) ? "-SNAPSHOT" : "")
sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
    jcenter()
}

ext {
    keycloakVersion = '4.8.3.Final'
    bintrayUser = System.getenv('BINTRAY_USER')
    bintrayKey = System.getenv('BINTRAY_KEY')
    buildNumber = System.getenv('TRAVIS_BUILD_NUMBER')
}

dependencyManagement {
    imports {
        mavenBom "org.keycloak.bom:keycloak-adapter-bom:$keycloakVersion"
    }
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    testImplementation("org.springframework.boot:spring-boot-starter-test")

    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")

    runtimeOnly ("org.postgresql:postgresql:42.2.5")
    testImplementation("com.h2database:h2")

    // swagger
    implementation "io.springfox:springfox-swagger2:2.8.0"
    implementation "io.springfox:springfox-swagger-ui:2.8.0"

    // keycloak
    implementation 'org.keycloak:keycloak-spring-boot-starter'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
check.dependsOn jacocoTestReport

artifactory {
    contextUrl = 'http://oss.jfrog.org'
    publish {
        repository {
            repoKey = 'oss-snapshot-local'
            username = bintrayUser
            password = bintrayKey
        }
        defaults {
            publications('nebula')
            publishArtifacts = true
            publishPom = true
            properties = ['build.number': buildNumber, 'build.name': 'barkoder']
        }
    }
    resolve {
        repoKey = 'jcenter'
    }
    clientConfig.info.setBuildNumber(buildNumber)
    clientConfig.info.setBuildName('barkoder')
}

bintray {
    user = bintrayUser
    key = bintrayKey
    buildNumber = buildNumber
    publications = ['nebula']

    pkg {
        repo = 'maven'
        name = 'barkoder'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/maslick/barkoder.git'
        version {
            name = project.version
            desc = "build ${buildNumber}"
            released = new Date()
        }
    }

    publish = true
    override = true
}

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
task createDockerfile(type: Dockerfile) {
    destFile = project.file('build/libs/Dockerfile')
    from 'amazoncorretto:11'
    instruction 'LABEL maintainer="pavel.masloff@gmai.com"'
    exposePort 8080
    copyFile jar.archiveFileName.get(), '/app/app.jar'
    workingDir '/app'
    instruction 'CMD java -jar app.jar'
}